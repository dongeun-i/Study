html , body {
	margin: 0; padding: 0;
}
.grid_container{
	display: grid; /* grid를 주면 자식요소들은 Block 속성이 된다.  */
	/* line-grid를 주었을경우 inline 속성으로 된다. */

	/* grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
		minmax()  column, row의 최소 / 최대 크기를 지정합니다. 인자 두 개가 필요한데, 각각 min값 / max값에 해당. min-width랑 max-width 랑 비슷한 개념
		column, row의 개수를 컨테이너에 맞게 자동적으로 조절해 준다.
	*/
	grid-template-columns:[first] 50% [second] 10% [third]auto;  /* 가로 방향  첫번쨰 column은 50% 2번쨰 10% 3번째 auto */
	grid-template-rows: 80vh 20vh; /* 세로 방향 첫번째 row는 화면의 높이의 80% 두번째 row는 화면 높이의 20% */
}


/* item 배경색 부여 */
.item { color: #fff; text-align: center; font-size: 30px; font-weight: bold; display: flex; align-items: center; justify-content: center;}
.red{
	background-color: red;
}
.orange{
	background-color: orange;
}
.yellow{
	background-color: yellow;
}
.green{
	background-color: green;
}
.blue{
	background-color: blue;
}
.purple{
	background-color: purple;
}

/* css repeat 연습 */
/* grid_container2  */
.grid_container2{
	margin: 100px 0;
	width: 900px;
	display: grid;
	grid-template-columns:50px 50px repeat(4,100px); /* 100px로 6번생성 */

	column-gap: 30px; /* column사이의 여백 */
	/* row-gap */
}



/* grid start end 사용해보기 */

/* grid_container3  */
.grid_container3{
	margin: 100px 0;
	display: grid;
	grid-template-columns: repeat(3 , 1fr);
	grid-template-rows: repeat(4, 200px);
}
.cell_1{
	grid-row-start: 1;
	grid-column-end: span 3 ; /* 3칸만큼 차지하겠다 */
}
.cell_2{
	grid-row: 2 / 4 ;
}
.cell_3{
	grid-column: 2 / 4;
}
.cell_6{
	grid-column: 1 / 4;
}